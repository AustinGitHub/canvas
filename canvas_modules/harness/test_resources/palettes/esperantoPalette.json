{
  "categories": [
    {
      "category": "import",
      "label": "[Esperanto~Import~eo]",
      "description": "[Esperanto~This category defines data importers~~~~~~~eo]",
      "image": "images/modeler-flows/palette/icons/palette-import.svg",
      "nodetypes": [
        {
          "label": "[Esperanto~Data Asset~~~~~~eo]",
          "description": "[Esperanto~Pull in data from remote data sources using connections, or pull in data from a file.~~~~~~~~~~~eo]",
          "typeId": "dataassetimport",
          "image": "images/modeler-flows/palette/icons/dataassetimport.svg",
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~User Input~~~~~~eo]",
          "description": "[Esperanto~Easily create synthetic dataâ€”either from scratch or by altering existing data.~~~~~~~~~eo]",
          "typeId": "userinput",
          "image": "images/modeler-flows/palette/icons/userinput.svg",
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Sim Gen~eo]",
          "description": "[Esperanto~Generate simulated data automatically or with user-specified statistical distributions.~~~~~~~~~~~~eo]",
          "typeId": "simgen",
          "image": "images/modeler-flows/palette/icons/simgen.svg",
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        }
      ]
    },
    {
      "category": "recordOp",
      "label": "[Esperanto~Record Operations~~~eo]",
      "description": "[Esperanto~This category defines operations on records~~~~~~~~~~~eo]",
      "image": "images/modeler-flows/palette/icons/palette-record-ops.svg",
      "nodetypes": [
        {
          "label": "[Esperanto~Select~eo]",
          "description": "[Esperanto~Select or discard a subset of records from the data stream based on a specific condition.~~~~~~~~~~~~eo]",
          "typeId": "select",
          "image": "images/modeler-flows/palette/icons/select.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Sample~eo]",
          "description": "[Esperanto~Select a subset of records for analysis, or specify a proportion of records to discard.~~~~~~~~~~~~eo]",
          "typeId": "sample",
          "image": "images/modeler-flows/palette/icons/sample.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Sort~eo]",
          "description": "[Esperanto~Sort records into ascending or descending order based on the values of one or more fields.~~~~~~~~~~~~~eo]",
          "typeId": "sort",
          "image": "images/modeler-flows/palette/icons/sort.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Balance~eo]",
          "description": "[Esperanto~Correct imbalances in datasets so they conform to specified test criteria.~~~~~~~~eo]",
          "typeId": "balance",
          "image": "images/modeler-flows/palette/icons/balance.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Distinct~~eo]",
          "description": "[Esperanto~Find or remove duplicate records in your data, or create a single, composite record from a group of duplicate records.~~~~~~~~~~~~~~~~~~~~~eo]",
          "typeId": "distinct",
          "image": "images/modeler-flows/palette/icons/distinct.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Aggregate~~~~eo]",
          "description": "[Esperanto~Replace a sequence of input records with summary, aggregated output records.~~~~~~~~eo]",
          "typeId": "aggregate",
          "image": "images/modeler-flows/palette/icons/aggregate.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Merge~eo]",
          "description": "[Esperanto~Take multiple input records and create a single output record containing all or some of the input fields.~~~~~~~~~~~~~~~~~eo]",
          "typeId": "merge",
          "image": "images/modeler-flows/palette/icons/merge.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Append~eo]",
          "description": "[Esperanto~Combine datasets with similar structures but different data.~~~~~~~~~~eo]",
          "typeId": "append",
          "image": "images/modeler-flows/palette/icons/append.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Space-Time-Boxes~~eo]",
          "description": "[Esperanto~An STB is an alphanumeric string that represents a regularly shaped region of space and time.~~~~~~~~~~~~~eo]",
          "typeId": "derive_stb",
          "image": "images/modeler-flows/palette/icons/spacetimebox.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Streaming TS~eo]",
          "description": "[Esperanto~Build and score time series models in one step.~~~~~~~~~~~~~~eo]",
          "typeId": "ts_streaming",
          "image": "images/modeler-flows/palette/icons/ts_streaming.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~SMOTE~eo]",
          "description": "[Esperanto~To perform over-sampling using SMOTE - Synthetic Minority Over-sampling Technique~~~~~~~~~~eo]",
          "typeId": "smote",
          "image": "images/modeler-flows/palette/icons/smote.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~RFM Aggregate~eo]",
          "description": "[Esperanto~Take historical transaction data, strip away unused data, and combine all remaining transaction data into one row.~~~~~~~~~~~~~~~~~~~~eo]",
          "typeId": "rfmaggregate",
          "image": "images/modeler-flows/palette/icons/rfmaggregate.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        }
      ]
    },
    {
      "category": "fieldOp",
      "label": "[Esperanto~Field Operations~~eo]",
      "description": "[Esperanto~This category defines operations on fields~~~~~~~~~~~eo]",
      "image": "images/modeler-flows/palette/icons/palette-field-ops.svg",
      "nodetypes": [
        {
          "label": "[Esperanto~Auto Data Prep~eo]",
          "description": "[Esperanto~Prepare your data for model building quickly and easily, without needing prior knowledge of the statistical concepts involved.~~~~~~~~~~~~~~~~~~~~~~~eo]",
          "typeId": "autodataprep",
          "image": "images/modeler-flows/palette/icons/autodataprep.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Type~eo]",
          "description": "[Esperanto~Specify field metadata and properties that are invaluable to modeling.~~~~~~~~~~~~~~eo]",
          "typeId": "type",
          "image": "images/modeler-flows/palette/icons/type.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Filter~eo]",
          "description": "[Esperanto~Rename or exclude fields at any point in a flow.~~~~~~~~~~~~~~eo]",
          "typeId": "filter",
          "image": "images/modeler-flows/palette/icons/filter.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Derive~eo]",
          "description": "[Esperanto~Modify data values or create new fields from one or more existing fields.~~~~~~~eo]",
          "typeId": "derive",
          "image": "images/modeler-flows/palette/icons/derive.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Filler~eo]",
          "description": "[Esperanto~Replace field values and change storage. Often used with a Type node to replace missing values.~~~~~~~~~~~~~~eo]",
          "typeId": "filler",
          "image": "images/modeler-flows/palette/icons/filler.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Reclassify~~~~~~eo]",
          "description": "[Esperanto~Transform one set of categorical values to another. Useful for collapsing categories or regrouping data for analysis.~~~~~~~~~~~~~~~~~~~~~eo]",
          "typeId": "reclassify",
          "image": "images/modeler-flows/palette/icons/reclassify.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Binning~eo]",
          "description": "[Esperanto~Automatically create new nominal fields based on the values of one or more existing continuous fields.~~~~~~~~~~~~~~~~eo]",
          "typeId": "binning",
          "image": "images/modeler-flows/palette/icons/binning.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~RFM Analysis~eo]",
          "description": "[Esperanto~Examine recent customer purchases (recency), how often they purchased (frequency), and how much they spent (monetary).~~~~~~~~~~~~~~~~~~~~~eo]",
          "typeId": "rfmanalysis",
          "image": "images/modeler-flows/palette/icons/rfmanalysis.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Ensemble~~eo]",
          "description": "[Esperanto~Combines two or more model nuggets to obtain more accurate predictions than can be gained from any of the individual models.~~~~~~~~~~~~~~~~~~~~~~~eo]",
          "typeId": "ensemble",
          "image": "images/modeler-flows/palette/icons/ensemble.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Partition~~~~eo]",
          "description": "[Esperanto~Generate a partition field that splits data into separate subsets or samples for the training, testing, and validation stages of model building.~~~~~~~~~~~~~~~~~~~~~~~~~~~~~eo]",
          "typeId": "partition",
          "image": "images/modeler-flows/palette/icons/partition.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~SetToFlag~~~~eo]",
          "description": "[Esperanto~Derive flag fields based on the categorical values defined for one or more nominal fields.~~~~~~~~~~~~~eo]",
          "typeId": "settoflag",
          "image": "images/modeler-flows/palette/icons/settoflag.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Restructure~eo]",
          "description": "[Esperanto~Generate multiple fields based on the values of a nominal or flag field.~~~~~~~eo]",
          "typeId": "restructure",
          "image": "images/modeler-flows/palette/icons/restructure.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Transpose~~~~eo]",
          "description": "[Esperanto~Swap the data in rows and columns so that fields become records and records become fields.~~~~~~~~~~~~~eo]",
          "typeId": "transpose",
          "image": "images/modeler-flows/palette/icons/transpose.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Field Reorder~eo]",
          "description": "[Esperanto~Define the natural order for displaying fields downstream.~~~~~~~~~eo]",
          "typeId": "reorder",
          "image": "images/modeler-flows/palette/icons/fieldreorder.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~History~eo]",
          "description": "[Esperanto~Create new fields containing data from fields in previous records (most often used for sequential data, such as time series data).~~~~~~~~~~~~~~~~~~~~~~~~~eo]",
          "typeId": "history",
          "image": "images/modeler-flows/palette/icons/history.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Time Intervals~eo]",
          "description": "[Esperanto~Specify intervals and derive a new time field for estimating or forecasting.~~~~~~~~eo]",
          "typeId": "astimeintervals",
          "image": "images/modeler-flows/palette/icons/astimeintervals.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Anonymize~~~~eo]",
          "description": "[Esperanto~Disguise field names, field values, or both when working with data that's to be included in a model downstream of the node.~~~~~~~~~~~~~~~~~~~~~~eo]",
          "typeId": "anonymize",
          "image": "images/modeler-flows/palette/icons/anonymize.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Reproject~~~~eo]",
          "description": "[Esperanto~Change the coordinate system for fields that can't be reprojected automatically.~~~~~~~~~~eo]",
          "typeId": "reproject",
          "image": "images/modeler-flows/palette/icons/reproject.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        }
      ]
    },
    {
      "category": "graph",
      "label": "[Esperanto~Graphs~eo]",
      "description": "[Esperanto~This category defines chart builders~~~~~~~eo]",
      "image": "images/modeler-flows/palette/icons/palette-charts.svg",
      "nodetypes": [
        {
          "label": "[Esperanto~Charts~eo]",
          "description": "[Esperanto~Launch the chart builder and create chart definitions to save with your flow.~~~~~~~~~eo]",
          "typeId": "dvcharts",
          "image": "images/modeler-flows/palette/icons/dvcharts.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Plot~eo]",
          "description": "[Esperanto~Shows the relationship between numeric fields.~~~~~~~~~~~~~eo]",
          "typeId": "plot",
          "image": "images/modeler-flows/palette/icons/plot.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Multiplot~~~~eo]",
          "description": "[Esperanto~A special type of plot that displays multiple Y fields over a single X field.~~~~~~~~~eo]",
          "typeId": "multiplot",
          "image": "images/modeler-flows/palette/icons/multiplot.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Time plot~~~~eo]",
          "description": "[Esperanto~View one or more time series plotted over time.~~~~~~~~~~~~~~eo]",
          "typeId": "timeplot",
          "image": "images/modeler-flows/palette/icons/timeplot.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Distribution~eo]",
          "description": "[Esperanto~Shows the occurrence of symbolic (non-numeric) values, such as mortgage type or gender, in a dataset.~~~~~~~~~~~~~~~~eo]",
          "typeId": "distribution",
          "image": "images/modeler-flows/palette/icons/distribution.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Histogram~~~~eo]",
          "description": "[Esperanto~Shows the occurrence of values for numeric fields.~~~~~~~~~~~~~~~~eo]",
          "typeId": "histogram",
          "image": "images/modeler-flows/palette/icons/histogram.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Collection~~~~~~eo]",
          "description": "[Esperanto~Shows the distribution of values for one numeric field relative to the values of another.~~~~~~~~~~~~eo]",
          "typeId": "collection",
          "image": "images/modeler-flows/palette/icons/collection.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Web~eo]",
          "description": "[Esperanto~Shows the strength of relationships between values of two or more symbolic fields.~~~~~~~~~~eo]",
          "typeId": "web",
          "image": "images/modeler-flows/palette/icons/web.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Evaluation~~~~~~eo]",
          "description": "[Esperanto~Evaluate and compare predictive models to choose the best model for your application.~~~~~~~~~~~eo]",
          "typeId": "evaluation",
          "image": "images/modeler-flows/palette/icons/evaluation.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        }
      ]
    },
    {
      "category": "modeling",
      "label": "[Esperanto~Modeling~~eo]",
      "description": "[Esperanto~This category defines model builders~~~~~~~eo]",
      "image": "images/modeler-flows/palette/icons/palette-modeling.svg",
      "nodetypes": [
        {
          "label": "[Esperanto~Auto Classifier~eo]",
          "description": "[Esperanto~Estimates and compares models to try out a variety of approaches for nominal and binary data.~~~~~~~~~~~~~eo]",
          "typeId": "autoclassifier",
          "image": "images/modeler-flows/palette/icons/autoclassifier.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Auto Numeric~eo]",
          "description": "[Esperanto~Estimates and compares models to try out a variety of approaches for a continuous numeric range.~~~~~~~~~~~~~~eo]",
          "typeId": "autonumeric",
          "image": "images/modeler-flows/palette/icons/autonumeric.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Auto Cluster~eo]",
          "description": "[Esperanto~Estimates and compares clustering models that identify groups of records with similar characteristics.~~~~~~~~~~~~~~~~eo]",
          "typeId": "autocluster",
          "image": "images/modeler-flows/palette/icons/autocluster.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Bayes Net~~~~eo]",
          "description": "[Esperanto~Build a probability model to establish the likelihood of occurrences by using seemingly unlinked attributes.~~~~~~~~~~~~~~~~~~eo]",
          "typeId": "bayesnet",
          "image": "images/modeler-flows/palette/icons/bayesnet.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~C5.0~eo]",
          "description": "[Esperanto~Build either a decision tree or a ruleset by splitting the sample based on the field that provides the maximum information gain.~~~~~~~~~~~~~~~~~~~~~~~~eo]",
          "typeId": "c50",
          "image": "images/modeler-flows/palette/icons/c50.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~C&R Tree~~eo]",
          "description": "[Esperanto~Tree-based classification and prediction method that splits training records into segments with similar output field values.~~~~~~~~~~~~~~~~~~~~~~~eo]",
          "typeId": "cart",
          "image": "images/modeler-flows/palette/icons/cart.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~CHAID~eo]",
          "description": "[Esperanto~Build decision trees by using chi-square statistics to identify optimal splits.~~~~~~~~~eo]",
          "typeId": "chaid",
          "image": "images/modeler-flows/palette/icons/chaid.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Quest~eo]",
          "description": "[Esperanto~Build decision trees by using a binary classification method.~~~~~~~~~~eo]",
          "typeId": "quest",
          "image": "images/modeler-flows/palette/icons/quest.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Tree-AS~eo]",
          "description": "[Esperanto~Build decision trees using either a CHAID or Exhaustive CHAID model.~~~~~~~~~~~~~eo]",
          "typeId": "treeas",
          "image": "images/modeler-flows/palette/icons/treeas.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Random Trees~eo]",
          "description": "[Esperanto~Build an ensemble model that consists of multiple decision trees.~~~~~~~~~~~~eo]",
          "typeId": "randomtrees",
          "image": "images/modeler-flows/palette/icons/randomtrees.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Random Forest~eo]",
          "description": "[Esperanto~Implement a bagging algorithm with a tree model as the base model.~~~~~~~~~~~~eo]",
          "typeId": "rf",
          "image": "images/modeler-flows/palette/icons/randomforest.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Decision List~eo]",
          "description": "[Esperanto~Identify subgroups or segments that show a higher or lower likelihood of a binary (yes or no) outcome relative to the overall sample.~~~~~~~~~~~~~~~~~~~~~~~~~eo]",
          "typeId": "decisionlist",
          "image": "images/modeler-flows/palette/icons/decisionlist.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Time Series~eo]",
          "description": "[Esperanto~Estimate and build exponential smoothing, ARIMA, or multivariate ARIMA models and produce forecasts.~~~~~~~~~~~~~~~~eo]",
          "typeId": "ts",
          "image": "images/modeler-flows/palette/icons/ts.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~TCM~eo]",
          "description": "[Esperanto~Create a temporal causal model to discover key causal relationships in time series data.~~~~~~~~~~~~eo]",
          "typeId": "tcm",
          "image": "images/modeler-flows/palette/icons/tcm.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~GenLin~eo]",
          "description": "[Esperanto~Build an equation that relates the input field values to the output field values.~~~~~~~~~~eo]",
          "typeId": "genlin",
          "image": "images/modeler-flows/palette/icons/genlin.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~GLMM~eo]",
          "description": "[Esperanto~Creates a generalized linear mixed model that extends the linear model.~~~~~~~eo]",
          "typeId": "glmm",
          "image": "images/modeler-flows/palette/icons/glmm.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~GLE~eo]",
          "description": "[Esperanto~Identify the dependent variable that's linearly related to the factors and covariates via a specified link function.~~~~~~~~~~~~~~~~~~~~eo]",
          "typeId": "gle",
          "image": "images/modeler-flows/palette/icons/gle.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Linear~eo]",
          "description": "[Esperanto~Classify records based on the values of numeric input fields.~~~~~~~~~~eo]",
          "typeId": "linear",
          "image": "images/modeler-flows/palette/icons/linear.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Linear-AS~~~~eo]",
          "description": "[Esperanto~Classify records based on the values of numeric input fields.~~~~~~~~~~eo]",
          "typeId": "linearas",
          "image": "images/modeler-flows/palette/icons/linear.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Regression~~~~~~eo]",
          "description": "[Esperanto~Classify records based on the values of numeric input fields.~~~~~~~~~~eo]",
          "typeId": "regression",
          "image": "images/modeler-flows/palette/icons/regression.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~LSVM~eo]",
          "description": "[Esperanto~Use a linear support vector machine to classify data.~~~~~~~eo]",
          "typeId": "lsvm",
          "image": "images/modeler-flows/palette/icons/lsvm.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Logistic~~eo]",
          "description": "[Esperanto~Classify records based on the values of categorical input fields.~~~~~~~~~~~~eo]",
          "typeId": "logreg",
          "image": "images/modeler-flows/palette/icons/logreg.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Neural Net~~~~~~eo]",
          "description": "[Esperanto~Approximate a wide range of predictive models with minimal demands on model structure and assumption.~~~~~~~~~~~~~~~~eo]",
          "typeId": "neuralnetwork",
          "image": "images/modeler-flows/palette/icons/neuralnetwork.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~KNN~eo]",
          "description": "[Esperanto~Find patterns of data without requiring an exact match to any stored patterns, or cases.~~~~~~~~~~~~eo]",
          "typeId": "knn",
          "image": "images/modeler-flows/palette/icons/knn.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Cox~eo]",
          "description": "[Esperanto~Build a predictive model for time-to-even data.~~~~~~~~~~~~~~eo]",
          "typeId": "coxreg",
          "image": "images/modeler-flows/palette/icons/cox.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~PCA/Factor~~~~~~eo]",
          "description": "[Esperanto~Provides powerful data-reduction techniques to reduce the complexity of your data.~~~~~~~~~~eo]",
          "typeId": "factor",
          "image": "images/modeler-flows/palette/icons/pca.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~SVM~eo]",
          "description": "[Esperanto~Use a support vector machine to classify data.~~~~~~~~~~~~~eo]",
          "typeId": "svm",
          "image": "images/modeler-flows/palette/icons/svm.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Feature Selection~~~eo]",
          "description": "[Esperanto~Identify fields that are most important for a given analysis.~~~~~~~~~~eo]",
          "typeId": "featureselection",
          "image": "images/modeler-flows/palette/icons/featureselection.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Discriminant~eo]",
          "description": "[Esperanto~Build a predictive model for group membership.~~~~~~~~~~~~~eo]",
          "typeId": "discriminant",
          "image": "images/modeler-flows/palette/icons/discriminant.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~SLRM~eo]",
          "description": "[Esperanto~Predict which offers are most appropriate for customers and the probability of the offers being accepted.~~~~~~~~~~~~~~~~~eo]",
          "typeId": "slrm",
          "image": "images/modeler-flows/palette/icons/slrm.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~STP~eo]",
          "description": "[Esperanto~Has many potential applications such as energy management for buildings, or public transport planning.~~~~~~~~~~~~~~~~eo]",
          "typeId": "stp",
          "image": "images/modeler-flows/palette/icons/stp.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Association Rules~~~eo]",
          "description": "[Esperanto~Automatically find associations that you could find manually using visualization techniques.~~~~~~~~~~~~~eo]",
          "typeId": "associationrules",
          "image": "images/modeler-flows/palette/icons/associationrules.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Apriori~eo]",
          "description": "[Esperanto~Discover association rules in your data.~~~~~~~~~~eo]",
          "typeId": "apriori",
          "image": "images/modeler-flows/palette/icons/apriori.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Carma~eo]",
          "description": "[Esperanto~Use an association rules discovery algorithm to discover association rules in your data.~~~~~~~~~~~~eo]",
          "typeId": "carma",
          "image": "images/modeler-flows/palette/icons/carma.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Sequence~~eo]",
          "description": "[Esperanto~Discover patterns in sequential or time-oriented data.~~~~~~~eo]",
          "typeId": "sequence",
          "image": "images/modeler-flows/palette/icons/sequence.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Kohonen~eo]",
          "description": "[Esperanto~Cluster your dataset into distinct groups when you don't know what those groups are at the beginning.~~~~~~~~~~~~~~~~eo]",
          "typeId": "kohonen",
          "image": "images/modeler-flows/palette/icons/kohonen.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Anomaly~eo]",
          "description": "[Esperanto~Identify outliers, or unusual cases, in your data.~~~~~~~~~~~~~~~~eo]",
          "typeId": "anomalydetection",
          "image": "images/modeler-flows/palette/icons/anomaly.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~K-Means~eo]",
          "description": "[Esperanto~Use a cluster method to cluster your dataset into distinct groups when you don't know what those groups are at the beginning.~~~~~~~~~~~~~~~~~~~~~~~eo]",
          "typeId": "kmeans",
          "image": "images/modeler-flows/palette/icons/kmeans.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~TwoStep~eo]",
          "description": "[Esperanto~Cluster your dataset into distinct groups when you don't know what those groups are at first.~~~~~~~~~~~~~eo]",
          "typeId": "twostep",
          "image": "images/modeler-flows/palette/icons/twostep.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~TwoStep-AS~~~~~~eo]",
          "description": "[Esperanto~Use this exploratory toolÂ  to reveal natural groupings (clusters) within your dataset.~~~~~~~~~~~eo]",
          "typeId": "twostepAS",
          "image": "images/modeler-flows/palette/icons/twostepas.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Isotonic-AS~eo]",
          "description": "[Esperanto~Isotonic Regression belongs to the family of regression algorithms. Implemented in Spark.~~~~~~~~~~~~eo]",
          "typeId": "isotonicas",
          "image": "images/modeler-flows/palette/icons/isotonicas.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~K-Means-AS~~~~~~eo]",
          "description": "[Esperanto~Cluster data points into a predefined number of clusters.~~~~~~~~eo]",
          "typeId": "kmeansas",
          "image": "images/modeler-flows/palette/icons/kmeansas.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~KDE Modeling~eo]",
          "description": "[Esperanto~Walks the line between unsupervised learning, feature engineering, and data modeling.~~~~~~~~~~~eo]",
          "typeId": "kdemodel",
          "image": "images/modeler-flows/palette/icons/kdemodel.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Gaussian Mixture~~eo]",
          "description": "[Esperanto~CExposes the core features and commonly used parameters of the Gaussian Mixture Python library.~~~~~~~~~~~~~~eo]",
          "typeId": "gmm",
          "image": "images/modeler-flows/palette/icons/gmm.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~XGBoost-AS~~~~~~eo]",
          "description": "xgboostas.desc",
          "typeId": "xgboostas",
          "image": "images/modeler-flows/palette/icons/xgboostas.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~XGBoost Tree~eo]",
          "description": "[Esperanto~Uses an advanced implementation of a gradient boosting algorithm with a tree model as the base model.~~~~~~~~~~~~~~~~eo]",
          "typeId": "xgboosttree",
          "image": "images/modeler-flows/palette/icons/xgboosttree.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~XGBoost Linear~eo]",
          "description": "[Esperanto~Uses an advanced implementation of a gradient boosting algorithm with a linear model as the base model.~~~~~~~~~~~~~~~~eo]",
          "typeId": "xgboostlinear",
          "image": "images/modeler-flows/palette/icons/xgboostlinear.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~One-Class SVM~eo]",
          "description": "[Esperanto~Detects the soft boundary of a given set of samples, to then classify new points as belonging to that set or not.~~~~~~~~~~~~~~~~~~~eo]",
          "typeId": "ocsvm",
          "image": "images/modeler-flows/palette/icons/ocsvm.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~MultiLayerPerceptron-AS~~~~eo]",
          "description": "[Esperanto~A classifier based on the feedforward artificial neural network. Consists of multiple layers.~~~~~~~~~~~~~eo]",
          "typeId": "mlpas",
          "image": "images/modeler-flows/palette/icons/mlpas.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~HDBSCAN~eo]",
          "description": "[Esperanto~Uses unsupervised learning to find clusters, or dense regions, of a data set.~~~~~~~~~eo]",
          "typeId": "hdbscan",
          "image": "images/modeler-flows/palette/icons/hdbscan.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        }
      ]
    },
    {
      "category": "TextMining",
      "label": "[Esperanto~Text Analytics~eo]",
      "description": "[Esperanto~This category defines Text Mining operations~~~~~~~~~~~~eo]",
      "image": "images/modeler-flows/palette/icons/palette-textmining.svg",
      "nodetypes": [
        {
          "label": "[Esperanto~Language Identifier~~~~~eo]",
          "description": "[Esperanto~Identify the natural language of a text field within your source data.~~~~~~~~~~~~~~eo]",
          "typeId": "LanguageIdentifier",
          "image": "images/modeler-flows/palette/icons/languageidentifier.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Text Link Analysis~~~~eo]",
          "description": "[Esperanto~Identify relationships between the concepts in the text data based on known patterns.~~~~~~~~~~~eo]",
          "typeId": "textlinkanalysis",
          "image": "images/modeler-flows/palette/icons/textlinkanalysis.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Text Mining~eo]",
          "description": "[Esperanto~Extract key concepts from text and create categories with these concepts and other data.~~~~~~~~~~~~eo]",
          "typeId": "textanalytic",
          "image": "images/modeler-flows/palette/icons/textminingworkbench.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        }
      ]
    },
    {
      "category": "output",
      "label": "[Esperanto~Outputs~eo]",
      "description": "[Esperanto~This category defines output builders~~~~~~~~eo]",
      "image": "images/modeler-flows/palette/icons/palette-output.svg",
      "nodetypes": [
        {
          "label": "[Esperanto~Table~eo]",
          "description": "[Esperanto~Create a table that lists the values in your data.~~~~~~~~~~~~~~~~eo]",
          "typeId": "table",
          "image": "images/modeler-flows/palette/icons/table.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Matrix~eo]",
          "description": "[Esperanto~Create a table that shows relationships between fields.~~~~~~~~eo]",
          "typeId": "matrix",
          "image": "images/modeler-flows/palette/icons/matrix.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Analysis~~eo]",
          "description": "[Esperanto~Evaluate the ability of a model to generate accurate predictions.~~~~~~~~~~~~eo]",
          "typeId": "analysis",
          "image": "images/modeler-flows/palette/icons/analysis.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Data Audit~~~~~~eo]",
          "description": "[Esperanto~Get a comprehensive first look at your data, presented in an easy-to-read matrix.~~~~~~~~~~eo]",
          "typeId": "dataaudit",
          "image": "images/modeler-flows/palette/icons/dataaudit.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Transform~~~~eo]",
          "description": "[Esperanto~Perform a rapid visual assessment of the best transformation to use.~~~~~~~~~~~~~eo]",
          "typeId": "transform",
          "image": "images/modeler-flows/palette/icons/transform.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Statistics~~~~~~eo]",
          "description": "[Esperanto~Get basic summary information about numeric fields.~~~~~~eo]",
          "typeId": "statistics",
          "image": "images/modeler-flows/palette/icons/statistics.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Means~eo]",
          "description": "[Esperanto~Compare the means between independent groups or between pairs of related fields to test whether a significant difference exists.~~~~~~~~~~~~~~~~~~~~~~~~eo]",
          "typeId": "means",
          "image": "images/modeler-flows/palette/icons/means.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Report~eo]",
          "description": "[Esperanto~Create formatted reports containing fixed text, data, or other expressions derived from your data.~~~~~~~~~~~~~~~eo]",
          "typeId": "report",
          "image": "images/modeler-flows/palette/icons/report.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Set Globals~eo]",
          "description": "[Esperanto~Scans your data and computes summary values that can be used in CLEM expressions.~~~~~~~~~~eo]",
          "typeId": "setglobals",
          "image": "images/modeler-flows/palette/icons/setglobals.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        },
        {
          "label": "[Esperanto~Sim Fit~eo]",
          "description": "[Esperanto~Fits a set of candidate statistical distributions to each field in your data.~~~~~~~~~eo]",
          "typeId": "simfit",
          "image": "images/modeler-flows/palette/icons/simfit.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ],
          "outputPorts": [
            {
              "name": "outPort",
              "label": "Output Port",
              "cardinality": "0:1"
            }
          ]
        }
      ]
    },
    {
      "category": "export",
      "label": "[Esperanto~Export~eo]",
      "description": "[Esperanto~This category defines data exporters~~~~~~~eo]",
      "image": "images/modeler-flows/palette/icons/palette-export.svg",
      "nodetypes": [
        {
          "label": "[Esperanto~Data Asset Export~~~eo]",
          "description": "[Esperanto~Write to remote data sources using connections.~~~~~~~~~~~~~~eo]",
          "typeId": "dataassetexport",
          "image": "images/modeler-flows/palette/icons/dataassetexport.svg",
          "inputPorts": [
            {
              "name": "inPort",
              "label": "Input Port",
              "cardinality": "0:1"
            }
          ]
        }
      ]
    }
  ]
}
